# Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.

[package]
name = "deno_runtime"
version = "0.115.0"
authors= {workspace = true}
edition= {workspace = true}
license= {workspace = true}
repository= {workspace = true}
description = "Provides the deno runtime library"

[features]
# "fake" feature that allows to generate docs on docs.rs
docsrs = []
# A feature that disables creation of startup snapshot during in the build script.
dont_create_runtime_snapshot = []
# A feature that changes how startup snapshot is generated, that allows
# extending it in embedder crates.
snapshot_from_snapshot = []
# A feature that disables embedding of the JavaScript source files in the binary.
# With this feature enabled, the sources must be consumed during build time,
# by creating a startup snapshot.
include_js_files_for_snapshotting = [
  "deno_core/include_js_files_for_snapshotting",
]

[lib]
name = "deno_runtime"
path = "lib.rs"

[[example]]
name = "hello_runtime"
path = "examples/hello_runtime.rs"

[build-dependencies]
deno_ast= {workspace = true}
deno_broadcast_channel= {workspace = true}
deno_cache= {workspace = true}
deno_console= {workspace = true}
deno_core= {workspace = true}
deno_crypto= {workspace = true}
deno_fetch= {workspace = true}
deno_ffi= {workspace = true}
deno_fs = { workspace = true, features = ["sync_fs"] }
deno_http= {workspace = true}
deno_io= {workspace = true}
deno_net= {workspace = true}
deno_node= {workspace = true}
deno_kv= {workspace = true}
deno_tls= {workspace = true}
deno_url= {workspace = true}
deno_web= {workspace = true}
deno_webidl= {workspace = true}
deno_websocket= {workspace = true}
deno_webstorage= {workspace = true}
deno_napi= {workspace = true}

[target.'cfg(windows)'.build-dependencies]
winres= {workspace = true}
winapi= {workspace = true}

[dependencies]
deno_broadcast_channel= {workspace = true}
deno_cache= {workspace = true}
deno_console= {workspace = true}
deno_core= {workspace = true}
deno_crypto= {workspace = true}
deno_fetch= {workspace = true}
deno_ffi= {workspace = true}
deno_fs = { workspace = true, features = ["sync_fs"] }
deno_http= {workspace = true}
deno_io= {workspace = true}
deno_kv= {workspace = true}
deno_napi= {workspace = true}
deno_net= {workspace = true}
deno_node= {workspace = true}
deno_tls= {workspace = true}
deno_url= {workspace = true}
deno_web= {workspace = true}
deno_webidl= {workspace = true}
deno_websocket= {workspace = true}
deno_webstorage= {workspace = true}
fastwebsockets= {workspace = true}

atty= {workspace = true}
console_static_text= {workspace = true}
dlopen= {workspace = true}
encoding_rs= {workspace = true}
filetime = "0.2.16"
fs3= {workspace = true}
http= {workspace = true}
hyper = { workspace = true, features = ["server", "stream", "http1", "http2", "runtime"] }
libc= {workspace = true}
log= {workspace = true}
netif = "0.1.6"
notify= {workspace = true}
once_cell= {workspace = true}
regex= {workspace = true}
ring= {workspace = true}
serde= {workspace = true}
signal-hook-registry = "1.4.0"
termcolor = "1.1.3"
tokio= {workspace = true}
uuid= {workspace = true}

[target.'cfg(windows)'.dependencies]
fwdansi= {workspace = true}
winapi = { workspace = true, features = ["commapi", "knownfolders", "mswsock", "objbase", "psapi", "shlobj", "tlhelp32", "winbase", "winerror", "winuser", "winsock2"] }
ntapi = "0.4.0"

[target.'cfg(unix)'.dependencies]
nix= {workspace = true}

[dev-dependencies]
# Used in benchmark
test_util= {workspace = true}

[package.metadata.docs.rs]
features = ["docsrs"]
